<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.09" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="" keyVect="kY/VDZjkyE1br8oDWxhHwQ==" exportKeySalt="bf04b63a-0921-4345-8c91-a894944f1b82" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String"><![CDATA[AP]]></Field>
	<Field name="DelegateClass" type="java.lang.String"><![CDATA[LKM_Kafka_to_Spark]]></Field>
	<Field name="DelegateScript" type="java.lang.String"><![CDATA[
import com.sunopsis.tools.core.SnpsStringTools;
import oracle.odi.km.exception.OdiKMException;
import oracle.odi.domain.root.RootIssue;
@GeneratorDelegateClass(componentType="AP", descriptionKey="GeneratorDelegateClass.LKMSparkKafka")
public class LKM_Kafka_to_Spark extends LKMSpark {
    private static final String PARAM_NUM_PARTITIONS = "numPartitions";
    //private static final String PARAM_KAFKA_PARAMS = "kafkaParams";
    private static final String PARAM_KAFKA_ZK_QUORUM = "zkQuorum";
    private static final String PARAM_FROM_OFFSETS = "fromOffsets";
    private static final String PARAM_GROUP_ID = "groupId";
    private static final String PARAM_STORAGE_LEVEL = "storageLevel";
    private static final String PARAM_KEY_DECODER = "keyDecoder";
    private static final String PARAM_VALUE_DECODER = "valueDecoder";
    private static final String PARAM_KEY_CLASS = "keyClass";
    private static final String PARAM_VALUE_CLASS = "valueClass";
    private static final String PARAM_TOPICS = "topics";
    private static final String PARAM_OFFSET_RANGES = "offsetRanges";
    private static final String PARAM_LEADER = "leaders";
    private static final String PARAM_MESSAGE_HANDLER= "messageHandler";
    private static final String DEFAULT_GROUP_ID = "<odi-generated-groupid>";

    static { 
        LKMSpark.storageClasses.put(LKMKafkaStreamLoader.LOADER_FUNCTION,LKMKafkaStreamLoader.class); 
        LKMSpark.storageClasses.put(LKMKafkaDirectStreamLoader.LOADER_FUNCTION,LKMKafkaDirectStreamLoader.class); 
        LKMSpark.storageClasses.put(LKMKafkaRDDLoader.LOADER_FUNCTION,LKMKafkaRDDLoader.class); 
    }
        
    static class LKMKafkaStreamLoader extends LKMSpark.LKMSparkStorage { 
        static final String LOADER_FUNCTION = "createStream"; 
        static List<LKMSpark.FunctionParam> FUNCT_ARG = new ArrayList<LKMSpark.FunctionParam>();
        
        static {
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_NUM_PARTITIONS));
            //FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_KAFKA_PARAMS));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_KAFKA_ZK_QUORUM));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_GROUP_ID));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_STORAGE_LEVEL));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_KEY_DECODER));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_VALUE_DECODER));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_OFFSET_RANGES));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_LEADER));
        }
        @Override
        String getLoaderFunction() {
            return LOADER_FUNCTION;
        }
        
        @Override
        List<LKMSpark.FunctionParam>  getLoaderFunctionParams() {
            return FUNCT_ARG;
        }
        
        void populateLoaderFunctionParams(SparkLoadCmd loadCmd, String tMapLongName) throws AdapterException, GenerationException, MappingException {
            StringBuilder strBuilder = new StringBuilder("ssc");
            
            List<MapPhysicalNode> parentNodes = physicalNode.getUpstreamConnectedNodes();
            if (parentNodes.size() != 1) {
              throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10002","ODIKM-SPARK-KAFKA-10002:LKM Spark-Kafka must be set on AP node which is connected with source node of Kafka technology.", null);
            }
            MapPhysicalNode parentNode = parentNodes.get(0);
            
            def parentExecUnit = parentNode.getExecutionUnit()   
            def parentDataServer = parentExecUnit.getLocation().getDataServer()
            def parentLogicalSchemaName = parentExecUnit.getLocation().getLogicalSchema().getName()
	    String tGroupIdString = ""
	    String tGroupIdString_createStream = ""

            if (getLoaderFunctionParams() != null) {
                for (final LKMSpark.FunctionParam funcParam : getLoaderFunctionParams()) {
                    String optionValue = getOptionValue(funcParam.name);

                    if(PARAM_GROUP_ID.equals(funcParam.name)) {
			if (optionValue != null && optionValue != "") {
			    tGroupIdString = optionValue
			}
                    } 
                }
            }	    
	    
	    if (tGroupIdString == "") {
		// NOOP
	    }
	    else if (DEFAULT_GROUP_ID.equals(tGroupIdString)) {
		tGroupIdString_createStream = "'" + tMapLongName + "'"
	    } else {
		tGroupIdString_createStream = "'" + tGroupIdString + "'"
	    }
            def zkQuorum = '''<$ {zookeeper="<?=odiRef.getDataServerPropertyFromLSchema("zookeeper.connect", "''' + parentLogicalSchemaName + '''")?>"; if(zookeeper==null || zookeeper.length()==0) throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10001","ODIKM-SPARK_KAFKA-10001: The mandatory Kafka DataServer property zookeeper.connect is invalid.", null); out.print(zookeeper);}; $>'''
            strBuilder.append(", " + PARAM_KAFKA_ZK_QUORUM + "='" + zkQuorum + "'");

            if (getLoaderFunctionParams() != null) {
                for (final LKMSpark.FunctionParam funcParam : getLoaderFunctionParams()) {
                    String optionValue = getOptionValue(funcParam.name);
                    if (tGroupIdString_createStream != "") {
			if(PARAM_GROUP_ID.equals(funcParam.name)) {
			    if (optionValue != null && optionValue != "") {
			      strBuilder.append(", " + PARAM_GROUP_ID + "=" + tGroupIdString_createStream)
			    }
			}
		    }
                    if(PARAM_NUM_PARTITIONS.equals(funcParam.name)) {
                      String num = (optionValue != null && optionValue != "") ? optionValue : 1;
                      strBuilder.append(", " + PARAM_TOPICS + "=" + "{strLoc : " + optionValue  + "}")
                    }
                    if(PARAM_KEY_DECODER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_KEY_DECODER + "=" + optionValue)
                      }
                    }  
                    if(PARAM_VALUE_DECODER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_VALUE_DECODER + "=" + optionValue)
                      }
                    }   
                    if(PARAM_STORAGE_LEVEL.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_STORAGE_LEVEL + "=StorageLevel." +optionValue )
                      }
                    }
                }
            }
            String paramValue = strBuilder.toString();
            if (!paramValue.equals("")) {
                loadCmd.setLoadFuncArgs(paramValue);
            } 
            loadCmd.setLoadFunction(getLoaderFunction()); 
        }
    } 
    
    static class LKMKafkaDirectStreamLoader extends LKMSpark.LKMSparkStorage { 
        static final String LOADER_FUNCTION = "createDirectStream"; 
        static List<LKMSpark.FunctionParam> FUNCT_ARG = new ArrayList<LKMSpark.FunctionParam>();
        
        static {
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_FROM_OFFSETS));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_KEY_DECODER));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_VALUE_DECODER));    
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_MESSAGE_HANDLER));    
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_GROUP_ID));    
        }
        @Override
        String getLoaderFunction() {
            return LOADER_FUNCTION;
        }
        
        @Override
        List<LKMSpark.FunctionParam>  getLoaderFunctionParams() {
            return FUNCT_ARG;
        }
        
        void populateLoaderFunctionParams(SparkLoadCmd loadCmd, String tMapLongName) throws AdapterException,
                                                           GenerationException,
                                                           oracle.odi.domain.mapping.exception.MappingException {
            StringBuilder strBuilder = new StringBuilder("ssc");
            strBuilder.append(", " + "[strLoc]");
            List<MapPhysicalNode> parentNodes = physicalNode.getUpstreamConnectedNodes();
            if (parentNodes.size() != 1) {
                throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10002","ODIKM-SPARK-KAFKA-10002:LKM Spark-Kafka must be set on AP node which is connected with source node of Kafka technology.", null);
            }
            MapPhysicalNode parentNode = parentNodes.get(0);
            def parentExecUnit = parentNode.getExecutionUnit()   
            def parentDataServer = parentExecUnit.getLocation().getDataServer()
            def parentLogicalSchemaName = parentExecUnit.getLocation().getLogicalSchema().getName()
     	    String tGroupIdString = ""
	    String tGroupIdString_createDirectStream = ""
               
            if (getLoaderFunctionParams() != null) {
                for (final LKMSpark.FunctionParam funcParam : getLoaderFunctionParams()) {
                    String optionValue = getOptionValue(funcParam.name);

                    if(PARAM_GROUP_ID.equals(funcParam.name)) {
			if (optionValue != null && optionValue != "") {
			    tGroupIdString = optionValue
			}
                    } 
                }
            }

	    if (tGroupIdString == "") {
		// NOOP
	    }
	    else if (DEFAULT_GROUP_ID.equals(tGroupIdString)) {
		tGroupIdString_createDirectStream = tMapLongName
	    }
	    else {
		tGroupIdString_createDirectStream = tGroupIdString
	    }

            def params=
               sprintf('''<?ds_props = odiRef.getDataServerPropertiesFromLSchema("%1$s");
            props_str = "";
            String  spacingString = "    ";
            for ( Map.Entry p : ds_props.entrySet() ) {
		// Omit any env var settings (all upper-case property name)
		if (!p.getKey().equals(p.getKey().toUpperCase())) {
		    new_prop = System.getProperty("line.separator") + spacingString + odiRef.getQuotedString(p.getKey()) + " : " + odiRef.getQuotedString(p.getValue());
		    props_str = props_str + ((props_str.length() > 0)? " \\" : "") + new_prop;
		    spacingString = "   ,";
		}
	    }
	    // Put in group_id value if available.
            if ("%2$s".length()>0) { 
		props_str += System.getProperty("line.separator") + "   ," + odiRef.getQuotedString("group.id") + " : " + odiRef.getQuotedString("%2$s");
	    }
            out.print(props_str);?>''', [parentLogicalSchemaName,tGroupIdString_createDirectStream])
   
            strBuilder.append(", kafkaParams=" + "{ \\"+ params+"}");
            if (getLoaderFunctionParams() != null) {
                for (final LKMSpark.FunctionParam funcParam : getLoaderFunctionParams()) {
                    String optionValue = getOptionValue(funcParam.name);
                    if(PARAM_FROM_OFFSETS.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_FROM_OFFSETS + "=" + optionValue)
                      }
                    }  
                    if(PARAM_KEY_DECODER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_KEY_DECODER + "=" + optionValue)
                      }
                    }  
                    if(PARAM_VALUE_DECODER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_VALUE_DECODER + "=" + optionValue)
                      }
                    }  
                    if(PARAM_MESSAGE_HANDLER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_MESSAGE_HANDLER + "=" + optionValue)
                      }
                    } 
                }
            }
            
            String paramValue = strBuilder.toString();
            if (!paramValue.equals("")) {
                loadCmd.setLoadFuncArgs(paramValue);
            } 
            loadCmd.setLoadFunction(getLoaderFunction()); 
        }
    }
    
    static class LKMKafkaRDDLoader extends LKMSpark.LKMSparkStorage { 
        static final String LOADER_FUNCTION = "createRDD"; 
        static List<LKMSpark.FunctionParam> FUNCT_ARG = new ArrayList<LKMSpark.FunctionParam>();
        
        static {
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_OFFSET_RANGES));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_LEADER));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_KEY_DECODER));
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_VALUE_DECODER));    
            FUNCT_ARG.add(new LKMSpark.FunctionParam(LKM_Kafka_to_Spark.PARAM_MESSAGE_HANDLER));    
        }
        @Override
        String getLoaderFunction() {
            return LOADER_FUNCTION;
        }
        
        @Override
        List<LKMSpark.FunctionParam>  getLoaderFunctionParams() {
            return FUNCT_ARG;
        }
        
        void populateLoaderFunctionParams(SparkLoadCmd loadCmd, String tMapLongName) throws AdapterException, GenerationException, MappingException {
            StringBuilder strBuilder = new StringBuilder("sc");
            List<MapPhysicalNode> parentNodes = physicalNode.getUpstreamConnectedNodes();
            if (parentNodes.size() != 1) {
                throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10002","ODIKM-SPARK-KAFKA-10002:LKM Spark-Kafka must be set on AP node which is connected with source node of Kafka technology.", null);
            }
            MapPhysicalNode parentNode = parentNodes.get(0);
            def parentExecUnit = parentNode.getExecutionUnit()   
            def parentDataServer = parentExecUnit.getLocation().getDataServer()
            def parentLogicalSchemaName = parentExecUnit.getLocation().getLogicalSchema().getName()
            def params=
               sprintf('''<?ds_props = odiRef.getDataServerPropertiesFromLSchema("%1$s");
            props_str = "";
            for ( Map.Entry p : ds_props.entrySet() ) {
                new_prop =  odiRef.getQuotedString(p.getKey()) + ":" + odiRef.getQuotedString(p.getValue());
                props_str = props_str + ((props_str.length() > 0)? ", " : "") + new_prop;
            }
            out.print(props_str);?>''', [parentLogicalSchemaName])
   
            strBuilder.append(", kafkaParams=" + "{"+ params+"}");
            if (getLoaderFunctionParams() != null) {
                for (final LKMSpark.FunctionParam funcParam : getLoaderFunctionParams()) {
                    String optionValue = getOptionValue(funcParam.name);
                    if(PARAM_OFFSET_RANGES.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_OFFSET_RANGES+ "=" + optionValue)
                      }else{
                          throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10003","ODIKM-SPARK-KAFKA-10003:LKM Kafka to Spark option OffsetRanges cannot be empty.", null);
                      }
                    }  
                    if(PARAM_LEADER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_LEADER+ "=" + optionValue)
                      }
                    } 
                    if(PARAM_KEY_DECODER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_KEY_DECODER + "=" + optionValue)
                      }
                    }  
                    if(PARAM_VALUE_DECODER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_VALUE_DECODER + "=" + optionValue)
                      }
                    }
                    if(PARAM_MESSAGE_HANDLER.equals(funcParam.name)) {
                      if (optionValue != null && optionValue != "") {
                          strBuilder.append(", " + PARAM_MESSAGE_HANDLER + "=" + optionValue)
                      }
                    }
                }
            }
            
            String paramValue = strBuilder.toString();
            if (!paramValue.equals("")) {
                loadCmd.setLoadFuncArgs(paramValue);
            } 
            loadCmd.setLoadFunction(getLoaderFunction()); 
        }
    }
    
    	@ASTProducerMethod(processingType=ProcessingType.SOURCE, producedASTType=SparkScript.class, styleKey="ProcessingStyleKey.Spark.ExtractScript")
     AbstractSyntaxTree EXTRACT_TAP(SqlQuery sqlQuery) throws AdapterException, MappingException, GenerationException {
        try {
          supportDataFrames('LKM Kafka to Spark', false);

          List<MapPhysicalNode> parentNodes = physicalNode.getUpstreamConnectedNodes();

          if (parentNodes.size() != 1) {
             throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10002","ODIKM-SPARK-KAFKA-10002:LKM Spark-Kafka must be set on AP node which is connected with source node of Kafka technology.", null);
          }

          MapPhysicalNode parentNode = parentNodes.get(0);
            
          TemplateUtils templateUtils = getTemplateUtils();
          SparkLoadCmd loadCmd = new SparkLoadCmd(templateUtils, parentNode);
          String storageFn =  "";
          String storage_FileFormat = null;
          if (!loadCmd.isStreamingMode()) {
            storageFn="createRDD";
          }else{
            storageFn=LKMSpark.LKMSparkStorage.getOptionValue(physicalNode, "Storage Function");
          }
          String avroSchemaDef = "";
          avroSchemaDef = LKMSpark.LKMSparkStorage.getOptionValue(physicalNode, "avroSchema");
        
          Object srcCompBondObj = parentNode.getLogicalComponent().getBoundObject(); 
          String techno_type = parentNode.getExecutionTechnology().getInternalName();
          oracle.odi.domain.model.OdiDataStore.HadoopStorageDescriptor hadoopStorageDes = (((oracle.odi.domain.model.OdiDataStore) srcCompBondObj).getRealObject()).getHadoopStorageDescriptor();
          if (hadoopStorageDes != null && hadoopStorageDes.getFormatType() != null)
          storage_FileFormat = hadoopStorageDes.getFormatType().getName().toLowerCase()
          if (srcCompBondObj != null && srcCompBondObj instanceof oracle.odi.domain.model.OdiDataStore ) {
              oracle.odi.domain.model.OdiDataStore srcTable = ((oracle.odi.domain.model.OdiDataStore) srcCompBondObj).getRealObject();
              loadCmd.setFileLoc(srcTable.getResourceName()); 
              if (srcTable.getFileDescriptor() != null){
                loadCmd.setFieldSep(SnpsStringTools.escapeUnicode(SnpsStringTools.hexStrToStr(SnpsStringTools.replaceNVL(srcTable.getFileDescriptor().getFieldSeparator())),true));
                loadCmd.setRowSep(SnpsStringTools.escapeUnicode(SnpsStringTools.hexStrToStr(SnpsStringTools.replaceNVL(srcTable.getFileDescriptor().getRowSeparator())),true));
              }
          }
          loadCmd.setTechnology(techno_type);
          if ("avro".equals(storage_FileFormat)){
          generatorContext.putObject( "mapping.spark.includeJdbcJars", new Boolean( true ) )
          loadCmd.addModulePaths("avro", "schema");
          loadCmd.addModulePaths("avro.io", "DatumReader, DatumWriter, BinaryDecoder");
          loadCmd.addModulePaths("base64", "*");
          if (avroSchemaDef != null && avroSchemaDef != "") {
              loadCmd.setInputAvroSchemaDef(avroSchemaDef.replace("\n", "").replace("\r", "").replace("\"", "\\\""));
          	}else{
          	throw new OdiKMException(null, "ODIKM-SPARK-KAFKA-10004","ODIKM-SPARK-KAFKA-10004:LKM Kafka to Spark option avroSchema cannot be empty for AVRO.", null);
          	}
          
          loadCmd.setFileFormat("AVRO");
          } else if ("parquet".equals(storage_FileFormat)){
          loadCmd.setFileFormat("PARQUET");
          } else if ("json".equals(storage_FileFormat)){
          loadCmd.setFileFormat("JSON");
          } else if ("delimited".equals(storage_FileFormat)){
          loadCmd.setFieldSep(SnpsStringTools.escapeUnicode(SnpsStringTools.hexStrToStr(SnpsStringTools.replaceNVL(parentNode.getLogicalComponent().getBoundObject().getHadoopStorageDescriptor().getFieldSeparator())),true));
          }
          
          def inferSourceSchema = LKMSpark.LKMSparkStorage.getOptionValue(physicalNode, "inferSchema");
          loadCmd.setInferSourceShema(inferSourceSchema.equalsIgnoreCase("true") ? true : false)
          loadCmd.setFlexField("STREAMING_CONTEXT","KafkaUtils")
          LKMSpark.LKMSparkStorage lkmSpark = getLKMSpark(storageFn);  
          lkmSpark.setPhysicalNodes(physicalNode, parentNode);
          loadCmd.addModulePaths("pyspark.streaming.kafka", "*");
          loadCmd.addModulePaths("pyspark", "StorageLevel");
          loadCmd.setKeySupport(true);
          lkmSpark.addCommand(loadCmd);
          SparkScript sparkScript = new SparkScript(templateUtils, null);
          sparkScript.addChild(loadCmd);

	  // Pull out the map long name
	  String tMapNameLong = sparkScript.getMapNameLong();
          
          // Moved this command down in order to have the ability to fetch the file names
          lkmSpark.populateLoaderFunctionParams(loadCmd, tMapNameLong);
          // Do we need to execute command  sparkScript.addChild(loadCmd); here again???
          
          return sparkScript;
        
        } catch (OdiKMException e) {
            generatorContext.getIssueList().add(new RootIssue(RootIssue.Level.ERROR,physicalNode.getTargetComponentKM(),e.getMessage()));
            throw e
        }
    }
    
	@ASTProducerMethod(processingType=ProcessingType.TARGET, producedASTType=NullTarget.class,styleKey="ProcessingStyleKey.Spark.LoadScript")
    AbstractSyntaxTree PRE_EXTRACT_TAP(SqlQuery input) {
        AbstractSyntaxTree result = new NullTarget();
        result.setUpstreamAST(input);
        return  result;
    }
}
]]></Field>
	<Field name="ExpectedAstClass" type="java.lang.String"><![CDATA[oracle.odi.mapping.generation.SqlQuery]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2020-10-01 19:43:34.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a6d8fa70-a1ec-4e39-a7bb-9fec3da809a6]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String">null</Field>
	<Field name="IndSuppSetBased" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IntgType" type="java.lang.String"><![CDATA[TRANSPARENT_EXTRACT]]></Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[141]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[933]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmLang" type="java.lang.String"><![CDATA[PYTHON]]></Field>
	<Field name="KmSrcLang" type="java.lang.String"><![CDATA[SQL_FILE]]></Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[KAFKA]]></Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[SPARK_PYTHON]]></Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2020-10-01 19:43:34.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUNOPSIS_INSTALL]]></Field>
	<Field name="LkmType" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String"><![CDATA[B]]></Field>
	<Field name="ProdAstType" type="java.lang.String"><![CDATA[oracle.odi.mapping.generation.spark.SparkScript]]></Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String"><![CDATA[PRE_EXTRACT_TAP:EXTRACT_TAP*]]></Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[LKM Kafka to Spark]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KL]]></Field>
	<Field name="VariableDefs" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExitGroup">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c6f165ae-49d9-4335-8c8a-9b3f51f3d68c]]></Field>
	<Field name="GroupName" type="java.lang.String"><![CDATA[Advanced]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[934]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[169cf0b8-1694-4501-bf38-74c2a2b39da4]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[935]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[936]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[364]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[fromOffsets]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Per-topic/partition Kafka offsets defining the (inclusive) starting point of the stream]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[04d324d3-389b-47aa-adf0-e41fb4fa2377]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[934]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return options.getValue("Storage Function").equals("createDirectStream")?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Column description]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_COL_DESC]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_COL]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ec475ef7-7544-4c1f-96be-46786a50c707]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[936]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[None]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Text value]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_VALUE]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b9ec3f75-58cb-4ef3-a2d4-82c791b6c89d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[935]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Specify the offset that indicates where to start consuming message on Kafka topic/partition. If no value is given, it will load from the first available message.
Format: [(TopicAndPartition(topic_name, partition_num),from_offset)...]. Example: [(TopicAndPartition('TOPIC1',1),10), (TopicAndPartition('TOPIC1',2),20)]				
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b241c292-99ec-4810-8fc5-e7b03a63734a]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[937]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[365]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[3]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[keyDecoder]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Optional. Give a KeyDecoder function to convert message key.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[86fc6cb0-244b-4185-b9cb-c4a2aa25530b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[937]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
This KM option allows overriding the default decoder function for decoding the
message key.When source Topic is defined for AVRO type then the default value is set to be b64decode(Decoder used is BASE64). If it is left blank, it is set to utf8_decoder(Decoder used is UTF8). 
                ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a24b2995-07c5-4f00-b2d3-6fbebe9f7516]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[938]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[366]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[4]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[valueDecoder]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Optional. Give a ValueDecoder function to convert message value.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f9f416b5-e214-4148-b916-ef1b58d1c777]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[938]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
This KM option allows overriding the default decoder function for decoding the
message value/body. When source Topic is defined for AVRO type then the default value is set to be b64decode(Decoder used is BASE64). If it is left blank, it is set to utf8_decoder(Decoder used is UTF8).
                ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d4deab85-5161-46e8-82e2-4db5655f9905]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[939]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[367]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<odi-generated-groupid>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[groupId]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[The group id for this consumer]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e3d349bd-334b-4293-b16e-1d11f352fbaa]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[939]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Specify the Kafka consumer group name used for the Kafka High Level Consumer. Kafka will store the last consumed message offset in Zookeeper using this group name.

By default the ODI mapping name concatenated with the Physical Design name willbe used forming a consumer group for a specific Physical Design.
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[940]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1b679bb6-af17-4e0b-acca-4e348e6541f5]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[941]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[942]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[368]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[6]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[MEMORY_AND_DISK_2]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[storageLevel]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[RDD Storage level]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[D]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[86db41e8-43d6-4020-a957-5b24179adb57]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[940]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return options.getValue("Storage Function").equals("createStream")?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a461bf4e-f423-4fc2-955e-8eefa3bc824b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[942]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[MEMORY_AND_DISK_2, MEMORY_ONLY, MEMORY_ONLY_2, MEMORY_AND_DISK, DISK_ONLY, DISK_ONLY_2]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2fa81952-24f7-4114-b002-918b6f08b696]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[941]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Specify the RDD storage level. Flags for controlling the storage of an RDD. 
Each StorageLevel records whether to use memory, or ExternalBlockStore, 
whether to drop the RDD to disk if it falls out of memory or ExternalBlockStore, 
whether to keep the data in memory in a serialized format, 
and whether to replicate the RDD partitions on multiple nodes.

Example: MEMORY_ONLY, MEMORY_AND_DISK, DISK_ONLY, MEMORY_AND_DISK_2(default).
                ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[943]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[944bfa14-fcf1-4c3a-a897-94fa1f3a3da3]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[944]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[369]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[7]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[numPartitions]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Number of partitions for each consumer]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e4e02584-38c0-47bf-84ff-0772aa239bc2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[943]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return options.getValue("Storage Function").equals("createStream") ?"show=true,enable=true ":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7e22d956-29ef-47de-9ba6-0cb381f28616]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[944]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Specify the number of partitions for each consumer.
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[945]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5c0fb6e2-ae26-4a85-b6bf-0d5e3ba08c5b]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[946]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[947]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[370]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[8]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[offsetRanges]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[List of offsetRange to specify topic:partition:[start, end) to consume]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7981d61e-8df3-4461-ad80-cb9950ebf325]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[945]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return (isStreaming)?"show=false,enable=false":"show=true,enable=true";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6ae0a391-0f63-4961-a22a-e2884500d4d6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[947]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[42afa4a3-a33b-457e-aab5-a65e76e50a9d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[946]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
An OffsetRange represents the lower and upper boundaries for a particular sequence of messages in a given Kafka topic and partition. The following data structure:
OffsetRange("TOPIC", 2, 300, 310).
Here we need a list of that OffsetRange. To do that please give input for example:
[OffsetRange("TOPIC1", 2, 300, 310),OffsetRange("TOPIC2", 1, 100, 200)...]
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[948]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c38d7a76-a3b7-4c0e-9080-fa3c2d998d81]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[949]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[950]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[371]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[9]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[leaders]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Kafka brokers for each TopicAndPartition in offsetRanges]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[333b2c06-c40b-4cf3-bed6-732fe6653032]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[948]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return (isStreaming)?"show=false,enable=false":"show=true,enable=true";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[207f04e8-f302-4ace-bb22-678c663d1c89]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[950]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[877524f6-b811-4c55-9d27-bfbd0d505878]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[949]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
By default this is an empty map, in which case leaders will be looked up on the driver.
Example:{TopicAndPartition("TOPIC",1):Broker("localhost",9092),.....}
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[951]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7fc86da4-501f-4e78-b013-643a08d8456c]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[952]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[372]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[messageHandler]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[A function used to convert KafkaMessageAndMetadata.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9d825c05-df2d-477a-bb25-5c801fcb7d72]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[951]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return options.getValue("Storage Function").equals("createStream") ?"show=false,enable=false ":"show=true,enable=true";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0618ac34-5556-49c5-9aac-7ffc938221ac]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[952]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
You can assess meta using messageHandler (default is None).
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4777827CFC27AE66E053E603C40A8D8C]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[953]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[954]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[373]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[11]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[avroSchema]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[avroSchema have the content of .avsc file. This file is associated with .avro Data file.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[227facb1-3fd5-4013-bbae-941207744395]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[954]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f4b68341-c0bf-499a-ba98-837d49c4a335]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[953]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
You need to specify schema of AVRO topic (default is None). avroSchema option have avro schema for the avro data file or TOPIC. 
Example :
{
    "type" : "record",
    "name" : "userInfo",
    "namespace" : "my.example",
    "fields" : [{"name" : "age", "type" : "int"}]
}  
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4A3665E71F1FE7D8E053E603C40A54F1]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[955]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[374]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[38]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[12]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[inferSchema]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Infer DataFrame schema from data]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0048e1b0-d8a9-49d4-a1d1-be30d3d38d7d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[955]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
If this option is set to True (default) the column names and types will be inferred from source data and DataFrame will be created with default options.
If it is set to False (default), DataFrame schema will be specified based on source datastore definition. 
  ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpReferencedObject">
		<Field name="IObject" type="com.sunopsis.sql.DbInt"><![CDATA[3600]]></Field>
	<Field name="ObjectPKasString" type="java.lang.String"><![CDATA[141]]></Field>
	<Field name="ObjectAKasString" type="java.lang.String"><![CDATA[]]></Field>
	<Field name="Description" type="java.lang.String"><![CDATA[SNP_TRT : LKMSpark]]></Field>
 <Field name="GlobalId" type="java.lang.String"><![CDATA[80aa8be2-d68d-40fe-bc1e-0b0b3ee0105e]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a418ca77-ed88-484e-b65c-277bd074b5ad]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[933]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[COMPONENT NAME: LKM Kafka to Spark
COMPONENT VERSION: 1
AUTHOR: Oracle 
COMPATIBILITY: ODI 12.2.2.0 or above

DESCRIPTION
This KM will load data from a Kafka topics into a Spark Python variable and can be defined on the AP between the execution units, source technology Kafka, target technology Spark Python.
When the topic is enabled to handle AVRO data then the avro binary should be BASE64 encoded and KM options valueDecoder and keyDecoder need to set to 'b64decode'.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[956]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[78799009-c7b8-4bf5-ba62-e9f2e61f74bb]]></Field>
	<Field name="IndChange" type="java.lang.String">null</Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[154]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[957]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[958]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[375]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[createDirectStream]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[Storage Function]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[The storage function to be used to load data]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[D]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6d7c1108-e725-4d5f-b597-58e0b254ecd0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[956]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[return (isStreaming)?"show=true,enable=true":"show=false,enable=false";]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[870c12c5-be80-4049-bdf1-e7415fca5878]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[958]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[createDirectStream, createStream]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9fc17079-878b-4e61-9672-56e51296f4a7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[957]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
Choose one of storage functions to load data.
"createStream" streams Kafka messages using the Kafka High Level Consumer(Receiver-based approach) with offset tracking in Zookeeper.
"createDirectStream" streams Kafka messages by directly polling data from Kafka(Direct approach, no receivers) with offset tracking in Spark Checkpoints.
				]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.933]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a418ca77-ed88-484e-b65c-277bd074b5ad]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.141]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[80aa8be2-d68d-40fe-bc1e-0b0b3ee0105e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKMSpark]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.154]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a6d8fa70-a1ec-4e39-a7bb-9fec3da809a6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Kafka to Spark]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[18]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.935]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b9ec3f75-58cb-4ef3-a2d4-82c791b6c89d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.936]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ec475ef7-7544-4c1f-96be-46786a50c707]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXITGROUP.38]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c6f165ae-49d9-4335-8c8a-9b3f51f3d68c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[LKM Kafka to Spark.Advanced]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_TRT.SNP_USEREXITGROUP]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[18.8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.934]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[04d324d3-389b-47aa-adf0-e41fb4fa2377]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.937]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[86fc6cb0-244b-4185-b9cb-c4a2aa25530b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.938]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f9f416b5-e214-4148-b916-ef1b58d1c777]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.939]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e3d349bd-334b-4293-b16e-1d11f352fbaa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.941]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2fa81952-24f7-4114-b002-918b6f08b696]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.942]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a461bf4e-f423-4fc2-955e-8eefa3bc824b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.940]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[86db41e8-43d6-4020-a957-5b24179adb57]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.105]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.110]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.944]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7e22d956-29ef-47de-9ba6-0cb381f28616]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.943]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e4e02584-38c0-47bf-84ff-0772aa239bc2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.946]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[42afa4a3-a33b-457e-aab5-a65e76e50a9d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.947]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6ae0a391-0f63-4961-a22a-e2884500d4d6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.945]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7981d61e-8df3-4461-ad80-cb9950ebf325]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.949]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[877524f6-b811-4c55-9d27-bfbd0d505878]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.950]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[207f04e8-f302-4ace-bb22-678c663d1c89]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.948]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[333b2c06-c40b-4cf3-bed6-732fe6653032]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.952]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0618ac34-5556-49c5-9aac-7ffc938221ac]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.951]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9d825c05-df2d-477a-bb25-5c801fcb7d72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.953]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f4b68341-c0bf-499a-ba98-837d49c4a335]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.954]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[227facb1-3fd5-4013-bbae-941207744395]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.955]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0048e1b0-d8a9-49d4-a1d1-be30d3d38d7d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.957]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9fc17079-878b-4e61-9672-56e51296f4a7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.958]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[870c12c5-be80-4049-bdf1-e7415fca5878]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.956]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6d7c1108-e725-4d5f-b597-58e0b254ecd0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[26]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[25]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[26]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.09]]></Field>
</Object>
</SunopsisExport>
